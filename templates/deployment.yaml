apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: dispatcher-config-volume 
        configMap:
          name: dispatcher-config
      - name: dispatcher-conf-secret
        secret:
          secretName: dispatcher-conf
      {{- if (default false .Values.use_hostpath) }}
      - name: scratch
        hostPath:
          path: /scratch/workers/oda/dda
          type: DirectoryOrCreate
      - name: dispatcher-scratch-root
        hostPath:
          path: {{ .Values.data.scratch_root }}
          type: DirectoryOrCreate
      - name: filelogdir
        hostPath:
          path: /scratch/workers/oda/dda-logs
          type: DirectoryOrCreate
      - name: isdc-arc-rev3
        hostPath:
          path: /isdc/arc/rev_3
      - name: isdc-pvphase-nrt-ops
        hostPath:
          path: /isdc/pvphase/nrt/ops
      - name: data-reduced-ddcache
        hostPath:
          path: {{ .Values.oda.ddcache }}
      {{- else }}
      - name: scratch
        persistentVolumeClaim:
          claimName: dda-interface-scratch
      - name: dispatcher-scratch-root
        persistentVolumeClaim:
          claimName: dispatcher-scratch-root
      - name: filelogdir
        persistentVolumeClaim:
          claimName: dda-filelogdir
      - name: data-reduced-ddcache
        persistentVolumeClaim:
          claimName: data-reduced-ddcache
      #- name: isdc-arc-rev3
      #- name: isdc-pvphase-nrt-ops
      {{- end }}
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources.dispatcher | nindent 12 }}
          env:
          - name: WORKER_MODE
            value: interface
          - name: DDA_USER_TOKEN
            valueFrom:
              secretKeyRef:
                name: dda-interface-token
                key: token.txt
          - name: DDA_QUEUE
            value: "{{ .Values.oda.ddaQueue }}"
          - name: DQUEUE_DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: dqueue-database-url
                key: url.txt
                optional: true
          - name: DISPATCHER_ASYNC_ENABLED
            {{- if .Values.async_dispatcher }}
            value: "yes"
            {{- else }}
            value: "no"
            {{- end }}
          volumeMounts:
          - mountPath: /scratch
            name: scratch
          - mountPath: /var/log/containers
            name: filelogdir
          {{- if (default false .Values.use_hostpath) }}
          - mountPath: /data/rep_base_prod
            name: isdc-arc-rev3
            readOnly: true
          - mountPath: /data/rep_base_prod_nrt
            name: isdc-pvphase-nrt-ops
            readOnly: true
          {{- end }}
          - mountPath: /data/reduced/ddcache
            name: data-reduced-ddcache
          - mountPath: /data/dispatcher_scratch
            name: dispatcher-scratch-root

          - mountPath: /dispatcher/conf/conf_env.yml
            name: dispatcher-conf-secret
            subPath: conf_env.yml
            readOnly: true
          - name: dispatcher-config-volume
            mountPath: /dispatcher/conf/conf.d/osa_data_server_conf.yml
            subPath: osa_data_server_conf.yml
            readOnly: true
          - name: dispatcher-config-volume
            mountPath: /dispatcher/conf/conf.d/polar_data_server_conf.yml
            subPath: polar_data_server_conf.yml
            readOnly: true
          - name: dispatcher-config-volume
            mountPath: /dispatcher/conf/conf.d/magic_data_server_conf.yml
            subPath: magic_data_server_conf.yml
            readOnly: true

        - name: celery
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          command: ["celery"]
          args: ["-A", "cdci_data_analysis.flask_app.tasks.celery", "worker", "-E"]
          #args: ["-A", "cdci_data_analysis.flask_app.tasks.celery", "worker", "-E", "--autoscale=30,5"]

          readinessProbe:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "celery -A cdci_data_analysis.flask_app.tasks.celery status | grep -o ': OK'"
            initialDelaySeconds: 50
            periodSeconds: 30

          livenessProbe:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "celery -A cdci_data_analysis.flask_app.tasks.celery status | grep -o ': OK'"
            initialDelaySeconds: 60
            periodSeconds: 30

          resources:
            {{- toYaml .Values.resources.celery | nindent 12 }}
        

        - name: celery-flower
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          command: ["celery"]
          args: ["-A", "cdci_data_analysis.flask_app.tasks.celery", "flower", "-l", "info", "--port=5555"]

          ports:
            - name: http
              containerPort: 5555
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10

          resources:
            {{- toYaml .Values.resources.celery_flower | nindent 12 }}


        - name: redis
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: redis
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: redis
            containerPort: 6379
            protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            tcpSocket:
              port: redis
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources.redis | nindent 12 }}
          env: []
          volumeMounts:
          - name: redis-data
            mountPath: /data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
